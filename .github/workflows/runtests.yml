name: Run tests

on:
   push:
      branches:
         - master
   pull_request:
      branches:
         - master

jobs:
   test:
      runs-on: ${{ matrix.os }}
      strategy:
         matrix:
            julia-version: ['1.3', '1.4', 'nightly']
            os: [ubuntu-latest, macos-latest]
            xcode: ['']

            # add a few extra tests
            include:
               - xcode: '11.4'
                 os: macos-latest
                 julia-version: 1.4

         fail-fast: false
      env:
         JULIA_TRACK_COVERAGE: yes
         GAP_BUILD_PACKAGES: debug
      steps:
         - uses: actions/checkout@v2.1.0
         - name: "Set up Julia"
           uses: julia-actions/setup-julia@v1
           with:
              version: ${{ matrix.julia-version }}

         - name: "Set Xcode"
           if: matrix.xcode != ''
           run: echo "::set-env name=DEVELOPER_DIR::/Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer"

         - uses: julia-actions/julia-buildpkg@latest
           env:
              CFLAGS: "--coverage"
              LDFLAGS: "--coverage"
         - uses: julia-actions/julia-runtest@latest

         - name: "Set GAP environment variable"
           run: |
              gap_sh=$(julia --project -e 'import GAP; print(GAP.gap_exe())');
              GAP="julia --project=${GITHUB_WORKSPACE} $gap_sh -- -A --quitonbreak --norepl"
              echo "::set-env name=GAP::$GAP"

         - name: "Install the GAP profiling package"
           run: julia --project -e 'using GAP; GAP.Packages.install("profiling")'

         - run: julia --project -e 'import Pkg ; Pkg.add("Documenter") ; using Documenter'
         - run: julia --project -e 'import Pkg ; Pkg.add("Singular") ; using Singular'
         - run: julia --project -e 'import Pkg ; Pkg.add("Nemo") ; using Nemo'
         - run: julia --project -e 'import Pkg ; Pkg.add("Primes") ; using Primes'

         - run: cd pkg/JuliaInterface && ${GAP} makedoc.g
         - run: cd pkg/JuliaExperimental && ${GAP} makedoc.g

         - run: cd pkg/JuliaInterface && ${GAP} --cover ${GITHUB_WORKSPACE}/JuliaInterface.coverage tst/testall.g
         - run: cd pkg/JuliaExperimental && ${GAP} --cover ${GITHUB_WORKSPACE}/JuliaExperimental.coverage tst/testall.g

         - run: ${GAP} etc/gather_coverage.g
         #- run: julia --color=yes --project etc/gather_coverage.jl
         - uses: julia-actions/julia-processcoverage@v1

         - uses: codecov/codecov-action@v1
