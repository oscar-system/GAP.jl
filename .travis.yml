language: julia
julia:
  - 1.1
  - 1.2
  - 1.3
  - nightly

cache: ccache

env:
  global:
    - MAKEFLAGS="-j4"
    - JULIA_TRACK_COVERAGE=yes
    - PATH="/usr/lib/ccache:$PATH"
  matrix:
    - GAP=$HOME/.julia/gap.sh
      GAP_INSTALL_PACKAGES=debug
    - GAPROOT=$TRAVIS_BUILD_DIR/gap
      GAP=$TRAVIS_BUILD_DIR/gap/gap

addons:
  apt_packages:
    - libgmp-dev
    - libreadline-dev
    - zlib1g-dev

branches:
  only:
    - master

before_script:
  - unset JULIA_PROJECT
  - printenv | sort
  - which gcc
  - which g++
  - which cc
  - which c++
  - git show --pretty=fuller -s
  - mkdir -p coverage
  - export CFLAGS=--coverage; export LDFLAGS=--coverage
  - if [[ -v GAPROOT ]]; then etc/travis_install_gap.sh; fi
    ## Add the package so we can use it later
  - julia -e 'import Pkg ; Pkg.develop(Pkg.PackageSpec(url=pwd())) ; Pkg.build()'
    ## Unset coverage to prevent Nemo C parts to be built with coverage
  - unset CFLAGS; unset LDFLAGS
  - julia -e 'import Pkg ; Pkg.add("Nemo")'

script:
  - etc/travis_test.sh
  # delete coverage files for GAP C files, to avoid clash with our .c files
  # such as calls.c
  - rm -f $HOME/.julia/packages/GAP/*/gap/obj/src/.libs/*.gc* # gcno, gcda
  - rm -f $TRAVIS_BUILD_DIR/gap/obj/src/.libs/*.gc*  # gcno, gcda

after_script:
  - cd $TRAVIS_BUILD_DIR
  - $GAP -A --quitonbreak --norepl etc/gather_coverage.g
  - rm -rf gap # delete GAP if present, to avoid collecting its coverage data
  - julia etc/gather_coverage.jl
  - bash <(curl -s https://codecov.io/bash)

notifications:
  slack:
    on_pull_requests: false
    on_success: change
    on_failure: always
    rooms:
      secure: Kx+tvM3v5FD8LdHjAG+Hr6bSiSXybn47Fz7NZwMUarroxDySOAtIZdcOMxXA7tzIZKLI5rImz3jJSx2gxyGhacKNAmo7ouEfVsrOl7XBuKHrzFjliULx55uaERX+ACkDOD4keWngE/5t67PKcEfOxONKFUd8wIg17Y/8ULdtE0IKh+T5vLWgIHEBuw6LEdLjEUyPBjwdcCIdg9h5fIpAE8N2zrqDgdAF4L8u4h2GJOm3xHgjowRtp742MDi1dtCrqAQU2BpzWw7z1M+R6BofAPKmG1Sx0yLkiyr93eDCNDTBRaXC4jeFEiufWCY64Iqd9R79Gi/tFlkXJ4MGFMAFzcQzQbNkqGrPwSLKJemM0G4WJpCIH0ygs1SXTClzl40sVa61ARhTA9h6rk3GNM38w3z4/KRcefY4c2MFETZ+bB67Nt70f7/oGjBYSMwFW7xKF7S8/Uv5+OV6/P4S17KyHIta3OZ5fCH7uT+3NMPcRmIKwFo+SENVNqgmq8LKYB9kpnCWvBJqnNnkG4R4rvlvtE7pLmOAr+umxhxToLu3KpP3SKbTGmPzJkmmXv9b623qn3PGE5JdIh1YnYtjpRswru2lWG1BE0vbLfLSr9NmDODsrlceJkn+/TqDHDHM3FBegv+J45YG/OO0TqAGvZ8SVJwNX4asq/l0IRUDwyIsuDo=
