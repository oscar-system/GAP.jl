language: julia
julia:
  - 1.1
  - 1.2
  - 1.3
  - nightly

env:
  global:
    - MAKEFLAGS="-j4"
    - JULIA_TRACK_COVERAGE=yes
    - PATH="/usr/lib/ccache:$PATH"
  matrix:
    - GAP=$HOME/.julia/gap.sh
      GAP_INSTALL_PACKAGES=debug
    - GAPROOT=$TRAVIS_BUILD_DIR/gap
      GAP=$TRAVIS_BUILD_DIR/gap/gap

addons:
  apt_packages:
    - libgmp-dev
    - libreadline-dev
    - zlib1g-dev

branches:
  only:
    - master

before_script:
  - unset JULIA_PROJECT
  - printenv | sort
  - which gcc
  - which g++
  - which cc
  - which c++
  - git show --pretty=fuller -s
  - mkdir -p coverage
  - export CFLAGS=--coverage; export LDFLAGS=--coverage
  - if [[ -v GAPROOT ]]; then etc/travis_install_gap.sh; fi
    ## Add the package so we can use it later
  - julia -e 'import Pkg ; Pkg.develop(Pkg.PackageSpec(url=pwd())) ; Pkg.build()'
    ## Unset coverage to prevent Nemo C parts to be built with coverage
  - unset CFLAGS; unset LDFLAGS
  - julia -e 'import Pkg ; Pkg.add("Nemo")'

script:
  - etc/travis_test.sh
  # delete coverage files for GAP C files, to avoid clash with our .c files
  # such as calls.c
  - rm -f $HOME/.julia/packages/GAP/*/gap/obj/src/.libs/*.gc* # gcno, gcda
  - rm -f $TRAVIS_BUILD_DIR/gap/obj/src/.libs/*.gc*  # gcno, gcda

after_script:
  - cd $TRAVIS_BUILD_DIR
  - $GAP -A --quitonbreak --norepl etc/gather_coverage.g
  - rm -rf gap # delete GAP if present, to avoid collecting its coverage data
  - julia etc/gather_coverage.jl
  - bash <(curl -s https://codecov.io/bash)

notifications:
  email:
    recipients:
      - max@quendi.de
    on_success: never # default: change
    on_failure: always # default: always
  slack:
    on_pull_requests: false
    on_success: change
    on_failure: always
    rooms:
      - 'oscar-system:gu1s3knwtSUWV1NaeVb0QJpD#gapjulia'
      - 'oscar-system:gu1s3knwtSUWV1NaeVb0QJpD#travis'
