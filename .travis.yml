language: julia
dist: bionic # needed for CxxWrap / Singular.jl

os:
  - osx
  - linux

julia:
  - 1.3
  - 1.4
  - nightly

env:
  global:
    - MAKEFLAGS="-j4"
    - JULIA_TRACK_COVERAGE=yes
    - PATH="/usr/lib/ccache:$PATH"

addons:
  apt_packages:
    - libgmp-dev
    - libreadline-dev
    - zlib1g-dev

branches:
  only:
    - master
    - /^v\d+\.\d+(\.\d+)?(-\S*)?$/  # release tags

install:
  # install some optional dependencies for our tests
  - JULIA_PROJECT= julia -e 'import Pkg ; Pkg.add("Documenter") ; @time using Documenter' || travis_terminate $?
  - JULIA_PROJECT= julia -e 'import Pkg ; Pkg.add("Singular") ; @time using Singular' || travis_terminate $?
  - JULIA_PROJECT= julia -e 'import Pkg ; Pkg.add("Nemo") ; @time using Nemo' || travis_terminate $?
  - JULIA_PROJECT= julia -e 'import Pkg ; Pkg.add("Primes") ; @time using Primes' || travis_terminate $?

before_script:
  # check code formatting
  - if command -v clang-format > /dev/null ; then git ls-files | egrep '\.[ch]$' | xargs clang-format -i ; fi
  - git diff --exit-code -- .   # detect if there are any diffs

script:
  # enable coverage tracking in our C code
  - mkdir -p coverage
  - export CFLAGS=--coverage; export LDFLAGS=--coverage
  # Build package and run Julia specific tests
  - julia --color=yes -e 'using Pkg ; Pkg.build(; verbose = true)'
  - julia --color=yes -e 'using Pkg ; Pkg.test(coverage=true)'
  - julia -e 'using GAP; GAP.Packages.install("io"); GAP.Packages.install("profiling")'
  - gap_sh=$(julia -e 'import GAP; print(GAP.gap_exe())');
  # Run GAP specific tests
  - export GAP="$gap_sh -A --quitonbreak --norepl"
  - etc/travis_test.sh

after_script:
  - cd $TRAVIS_BUILD_DIR
  - $GAP etc/gather_coverage.g
  - rm -rf gap  # delete GAP if present, to avoid collecting its coverage data
  # workaround Travis leaving a julia installation behind on macOS, see
  # <https://github.com/travis-ci/travis-build/pull/1895>
  - if [ -d juliamnt ]; then sudo hdiutil detach juliamnt ; fi
  - julia --color=yes etc/gather_coverage.jl
  - bash <(curl -s https://codecov.io/bash)

matrix:
  allow_failures:
    - julia: nightly
  fast_finish: true
  include:
    - stage: "Documentation"
      julia: 1.3
      os: linux
      script:
        - julia --color=yes --project=docs/ -e 'using Pkg; Pkg.instantiate(); Pkg.add(PackageSpec(path=pwd()))'
        - julia --color=yes --project=docs/ docs/make.jl
      after_success: skip
      name: "HTML"

notifications:
  email:
    recipients:
      - max@quendi.de
    on_success: never   # default: change
    on_failure: always  # default: always
  slack:
    on_pull_requests: false
    on_success: change
    on_failure: always
    rooms:
      - 'oscar-system:gu1s3knwtSUWV1NaeVb0QJpD#gapjulia'
      - 'oscar-system:gu1s3knwtSUWV1NaeVb0QJpD#travis'
